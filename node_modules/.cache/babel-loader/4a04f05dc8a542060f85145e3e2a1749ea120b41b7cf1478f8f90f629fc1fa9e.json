{"ast":null,"code":"var _jsxFileName = \"D:\\\\web_class_frontend\\\\src\\\\pages\\\\loginpage\\\\Loginpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loginUserApi } from '../../apis/Api';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loginpage = () => {\n  _s();\n  //use state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  //error state\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  //validation\n  var validate = () => {\n    var isValid = true;\n    if (email.trim() === '' || email.includes('@' === false)) {\n      setEmailError('please enter email');\n      isValid = false;\n    }\n    if (password.trim() === '') {\n      setPasswordError('please enter Password');\n      isValid = false;\n    }\n    return isValid;\n  };\n\n  //login function\n  const handleLogin = e => {\n    e.preventDefault();\n\n    //validation\n    if (!validate()) {\n      return; //stop the process\n    }\n\n    //making json object\n    const data = {\n      \"email\": email,\n      \"password\": password\n    };\n\n    //making API request(same as register)\n    loginUserApi(data).then(res => {\n      //success: true/false, message\n\n      if (res.data.success === false) {\n        toast.error(res.data.message);\n      } else {\n        toast.success(res.data.message);\n\n        //received data: success-boolfromat, message-string, token-string, userData-\n        //1. set token\n        localStorage.setItem('token', res.data.token);\n\n        //2. convert json object\n        const convertedData = JSON.stringify(res.data.userData);\n\n        //3. set user data in local storage\n        localStorage.setItem('user', convertedData);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Your Email:\", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setEmail(e.target.value),\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Your Password:\", password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setPassword(e.target.value),\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"btn btn-danger mt-2 w-100\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Loginpage, \"mYnrU+xg+8tewUeZClc7aescQ+s=\");\n_c = Loginpage;\nexport default Loginpage;\n\n//task\n//1. create apath for login page\n//2. make a UI\n//3. make a use state\nvar _c;\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"names":["React","useState","loginUserApi","toast","jsxDEV","_jsxDEV","Loginpage","_s","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","validate","isValid","trim","includes","handleLogin","e","preventDefault","data","then","res","success","error","message","localStorage","setItem","token","convertedData","JSON","stringify","userData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/web_class_frontend/src/pages/loginpage/Loginpage.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { loginUserApi } from '../../apis/Api';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Loginpage = () => {\r\n    //use state\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    //error state\r\n    const [emailError, setEmailError] = useState('')\r\n    const [passwordError, setPasswordError] = useState('')\r\n\r\n    //validation\r\n    var validate = () => {\r\n        var isValid = true;\r\n        if (email.trim() === '' || email.includes('@' === false)) {\r\n            setEmailError('please enter email')\r\n            isValid = false;\r\n        }\r\n        if (password.trim() === '') {\r\n            setPasswordError('please enter Password')\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n\r\n    //login function\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        //validation\r\n        if (!validate()) {\r\n            return; //stop the process\r\n        }\r\n\r\n        //making json object\r\n        const data = {\r\n            \"email\": email,\r\n            \"password\": password\r\n        }\r\n\r\n        //making API request(same as register)\r\n        loginUserApi(data).then((res) => {\r\n            //success: true/false, message\r\n\r\n            if (res.data.success === false) {\r\n                toast.error(res.data.message)\r\n            } else {\r\n                toast.success(res.data.message)\r\n                \r\n\r\n                //received data: success-boolfromat, message-string, token-string, userData-\r\n                //1. set token\r\n                localStorage.setItem('token', res.data.token)\r\n\r\n                //2. convert json object\r\n                const convertedData = JSON.stringify(res.data.userData)\r\n\r\n                //3. set user data in local storage\r\n                localStorage.setItem('user', convertedData)\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Login!</h1>\r\n            <form className='w-50'>\r\n                <label>Enter Your Email:{email}</label>\r\n                <input onChange={(e) => setEmail(e.target.value)} type=\"text\" className='form-control' placeholder='Enter your Email' />\r\n                {\r\n                    emailError && <p className=\"text-danger\">{emailError}</p>\r\n                }\r\n\r\n                <label>Enter Your Password:{password}</label>\r\n                <input onChange={(e) => setPassword(e.target.value)} type=\"text\" className='form-control' placeholder='Enter your Password' />\r\n                {\r\n                    passwordError && <p className=\"text-danger\">{passwordError}</p>\r\n                }\r\n\r\n                <button onClick={handleLogin} className='btn btn-danger mt-2 w-100' >Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loginpage\r\n\r\n//task\r\n//1. create apath for login page\r\n//2. make a UI\r\n//3. make a use state"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}